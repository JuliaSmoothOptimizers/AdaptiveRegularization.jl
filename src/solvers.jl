solvers_const = Dict(
    :ARCLDLt_abs => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => solve_modelARCDiagAbs, :kwargs => ()),
    :ARCLDLt_HO_Sham => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => (x, y, z) -> solve_modelARCDiag_HO(x, y, z, ho_correction = :Shamanskii, λfact = λfact), :kwargs => ()),
    :ARCLDLt_HO_vs_Nwt => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => (x, y, z) -> solve_modelARCDiag_HO_vs_Nwt(x, y, z, λfact = λfact, nwt_res_fact = nwt_res_fact), :kwargs => ()),
    :ARCLDLt => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => solve_modelARCDiag, :kwargs => ()),
    # :ARCMA57_abs => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => solve_modelARCDiagAbs, :kwargs => ()),
    # :ARCMA57_Sham_vs_Nwt_λ => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => (x, y, z) -> solve_modelARCDiag_HO_vs_Nwt(x, y, z, λfact = λfact, nwt_res_fact = nwt_res_fact, ho_correction = :Shamanskii_MA57), :kwargs => ()),
    # :ARCMA57_Sham_vs_Nwt => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => solve_modelARCDiag, :kwargs => ()),
    # :ARCMA57_Sham_λ => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => (x, y, z) -> solve_modelARCDiag_HO(x, y, z, ho_correction = :Shamanskii_MA57, λfact = λfact), :kwargs => ()),
    # :ARCMA57 => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => solve_modelARCDiag, :kwargs => ()),
    # :ARCMA97_abs => (:hess_type => HessDense, :pdata_type => PDataMA97, :solve_model => solve_modelARCDiagAbs, :kwargs => ()),
    # :ARCMA97 => (:hess_type => HessDense, :pdata_type => PDataMA97, :solve_model => solve_modelARCDiag, :kwargs => ()),
    :ARCqKdense => (:hess_type => HessDense, :pdata_type => PDataKARC, :solve_model => solve_modelKARC, :kwargs => ()),
    :ARCqKOp => (:hess_type => HessOp, :pdata_type => PDataKARC, :solve_model => solve_modelKARC, :kwargs => ()),
    :ARCqKsparse => (:hess_type => HessSparse, :pdata_type => PDataKARC, :solve_model => solve_modelKARC, :kwargs => ()),
    :ARCSpectral_abs => (:hess_type => HessDense, :pdata_type => PDataSpectral, :solve_model => solve_modelARCDiagAbs, :kwargs => ()),
    :ARCSpectral => (:hess_type => HessDense, :pdata_type => PDataSpectral, :solve_model => solve_modelARCDiag, :kwargs => ()),
    :ST_ARCdense => (:hess_type => HessDense, :pdata_type => PDataST, :solve_model => solve_modelST_ARC, :kwargs => ()),
    :ST_ARCOp => (:hess_type => HessOp, :pdata_type => PDataST, :solve_model => solve_modelST_ARC, :kwargs => ()),
    :ST_ARCsparse => (:hess_type => HessSparse, :pdata_type => PDataST, :solve_model => solve_modelST_ARC, :kwargs => ()),
    :ST_TRdense => (:hess_type => HessDense, :pdata_type => PDataST, :solve_model => solve_modelST_TR, :kwargs => ()),
    :ST_TROp => (:hess_type => HessOp, :pdata_type => PDataST, :solve_model => solve_modelST_TR, :kwargs => ()),
    :ST_TRsparse => (:hess_type => HessSparse, :pdata_type => PDataST, :solve_model => solve_modelST_TR, :kwargs => ()),
    :TRKdense => (:hess_type => HessDense, :pdata_type => PDataKTR, :solve_model => solve_modelKTR, :kwargs => ()),
    :TRKOp => (:hess_type => HessOp, :pdata_type => PDataKTR, :solve_model => solve_modelKTR, :kwargs => ()),
    :TRKsparse => (:hess_type => HessSparse, :pdata_type => PDataKTR, :solve_model => solve_modelKTR, :kwargs => ()),
    :TRLDLt_abs => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => solve_modelTRDiagAbs, :kwargs => ()),
    :TRLDLt_BK => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => solve_modelTRDiag, :kwargs => ()),
    :TRLDLt_HO_MP => (:hess_type => HessDense,:pdata_type => PDataLDLt, :solve_model => (x, y, z) -> solve_modelTRDiag_HO(x, y , z, ho_correction = corr_ho, fact = 2.0), :kwargs => ()),
    :TRLDLt_HO_vs_Nwt_λ => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => (x, y, z) -> solve_modelTRDiag_HO_vs_Nwt_λ(x, y , z; ho_correction = corr_ho, nwt_res_fact = nwt_res_fact, λfact = λfact), :kwargs => ()),
    :TRLDLt => (:hess_type => HessDense, :pdata_type => PDataLDLt, :solve_model => solve_modelTRDiag, :kwargs => ()),
    # :TRMA57_abs => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => solve_modelTRDiagAbs, :kwargs => ()),
    # :TRMA57_Sham_vs_Nwt_λ => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => (x, y, z) -> solve_modelTRDiag_HO_vs_Nwt_λ(x, y, z; ho_correction = corr_ho, nwt_res_fact = nwt_res_fact, λfact = λfact), :kwargs => ()),
    # :TRMA57 => (:hess_type => HessSparse, :pdata_type => PDataMA57, :solve_model => solve_modelTRDiag, :kwargs => ()),
    # :TRMA97_abs => (:hess_type => HessDense, :pdata_type => PDataMA97, :solve_model => solve_modelTRDiagAbs, :kwargs => ()),
    # :TRMA97 => (:hess_type => HessSparse, :pdata_type => PDataMA97, :solve_model => solve_modelTRDiag, :kwargs => ()),
    :TRSpectral_abs => (:hess_type => HessDense, :pdata_type => PDataSpectral, :solve_model => solve_modelTRDiagAbs, :kwargs => ()),
    :TRSpectral => (:hess_type => HessDense, :pdata_type => :pdata_type => PDataSpectral, :solve_model => solve_modelTRDiag, :kwargs => ()),
)
