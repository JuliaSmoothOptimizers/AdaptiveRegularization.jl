Dict(
    :ARCLDLt_abs => Combi(hessian_dense, PDataLDLt{T}, solve_modelARCDiagAbs, preprocessLDLt, decreaseFact, Tparam{T}()),
    :ARCLDLt_HO_Sham => Combi(hessian_dense, PDataLDLt{T}, (x, y, z) -> solve_modelARCDiag_HO(x, y, z, ho_correction = :Shamanskii, λfact = λfact), preprocessLDLt, decreaseFact, Tparam{T}()),
    :ARCLDLt_HO_vs_Nwt => Combi(hessian_dense, PDataLDLt{T},  (x, y, z) -> solve_modelARCDiag_HO_vs_Nwt(x, y, z, λfact = λfact, nwt_res_fact = nwt_res_fact), preprocessLDLt, decreaseFact, Tparam{T}()),
    :ARCLDLt => Combi(hessian_dense, PDataLDLt{T}, solve_modelARCDiag, preprocessLDLt, decreaseFact, Tparam{T}()),
    :ARCMA57_abs => Combi(hessian_sparse, PDataMA57{T}, solve_modelARCDiagAbs, preprocessMA57, decreaseFact, Tparam{T}()),
    :ARCMA57_Sham_vs_Nwt_λ => Combi(hessian_sparse, PDataMA57{T}, (x, y, z) -> solve_modelARCDiag_HO_vs_Nwt(x, y, z, λfact = λfact, nwt_res_fact = nwt_res_fact, ho_correction = :Shamanskii_MA57), preprocessMA57, decreaseFact, Tparam{T}()),
    :ARCMA57_Sham_vs_Nwt => Combi(hessian_sparse, PDataMA57{T}, solve_modelARCDiag, preprocessMA57, decreaseFact, Tparam{T}()),
    :ARCMA57_Sham_λ => Combi(hessian_sparse, PDataMA57{T}, (x, y, z) -> solve_modelARCDiag_HO(x, y, z, ho_correction = :Shamanskii_MA57, λfact = λfact), preprocessMA57, decreaseFact, Tparam{T}()),
    :ARCMA57 => Combi(hessian_sparse, PDataMA57{T}, solve_modelARCDiag, preprocessMA57, decreaseFact, Tparam{T}()),
    :ARCMA97_abs => Combi(hessian_dense, PDataMA97{T}, solve_modelARCDiagAbs, preprocessMA97, decreaseFact, Tparam{T}()),
    :ARCMA97 => Combi(hessian_dense, PDataMA97{T}, solve_modelARCDiag, preprocessMA97, decreaseFact, Tparam{T}()),
    :ARCqKdense => Combi(hessian_dense, PDataK{T}, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC{T}(shifts)),
    :ARCqKOp => Combi(hessian_operator, PDataK{T}, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC{T}(shifts)),
    :ARCqKOp1 => Combi(hessian_operator, PDataK{T}, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC{T}(shifts, ζin = ζ, τin = τ)),
    :ARCqKOp2 => Combi(hessian_operator, PDataK{T}, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC{T}(shifts)),
    :ARCqKOp5 => Combi(hessian_operator, PDataK{T}, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC{T}(shifts)),
    :ARCqKsparse => Combi(hessian_sparse, PDataK{T}, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC{T}(shifts)),
    :ARCSpectral_abs => Combi(ARCTR.hessian_dense, ARCTR.PDataSpectral{T}, ARCTR.solve_modelARCDiagAbs, ARCTR.preprocessSpectral, ARCTR.decreaseFact, ARCTR.Tparam{T}()),
    :ARCSpectral => Combi(ARCTR.hessian_dense,ARCTR.PDataSpectral{T},ARCTR.solve_modelARCDiag,ARCTR.preprocessSpectral,ARCTR.decreaseFact,ARCTR.Tparam{T}()),
    :ST_ARCdense => Combi(hessian_dense, PDataST{T}, solve_modelST_ARC, preprocessST, decreaseGen, TparamsST{T}()),
    :ST_ARCOp => Combi(hessian_operator, PDataST{T}, solve_modelST_ARC, preprocessST, decreaseGen, TparamsST{T}()),
    :ST_ARCsparse => Combi(hessian_sparse, PDataST{T}, solve_modelST_ARC, preprocessST, decreaseGen, TparamsST{T}()),
    :ST_TRdense => Combi(hessian_dense, PDataST{T}, solve_modelST_TR, preprocessST, decreaseGen, TparamsST{T}()),
    :ST_TROp => Combi(hessian_operator, PDataST{T}, solve_modelST_TR, preprocessST, decreaseGen, TparamsST{T}()),
    :ST_TRsparse => Combi(hessian_sparse, PDataST{T}, solve_modelST_TR, preprocessST, decreaseGen, TparamsST{T}()),
    :TRKdense => Combi(hessian_dense, PDataK{T}, solve_modelKTR, preprocessKTR, decreaseKTR, TparamsKTR{T}()),
    :TRKOp => Combi(hessian_operator, PDataK{T}, solve_modelKTR, preprocessKTR, decreaseKTR, TparamsKTR{T}()),
    :TRKsparse => Combi(hessian_sparse, PDataK{T}, solve_modelKTR, preprocessKTR, decreaseKTR, TparamsKTR{T}()),
    :TRLDLt_abs => Combi(hessian_dense, PDataLDLt{T}, solve_modelTRDiagAbs, preprocessLDLt, decreaseFact, Tparam{T}()),
    :TRLDLt_BK => Combi(hessian_dense, PDataLDLt{T}, solve_modelTRDiag, preprocessLDLt2, decreaseFact, Tparam{T}()),
    :TRLDLt_HO_MP => Combi(hessian_dense,PDataLDLt{T},  (x, y, z) -> solve_modelTRDiag_HO(x, y , z, ho_correction = corr_ho, fact = 2.0), preprocessLDLt, decreaseFact, Tparam{T}()),
    :TRLDLt_HO_vs_Nwt_λ => Combi(hessian_dense, PDataLDLt{T}, (x, y, z) -> solve_modelTRDiag_HO_vs_Nwt_λ(x, y , z; ho_correction = corr_ho, nwt_res_fact = nwt_res_fact, λfact = λfact), preprocessLDLt, decreaseFact, Tparam{T}()),
    :TRLDLt => Combi(hessian_dense, PDataLDLt{T}, solve_modelTRDiag, preprocessLDLt, decreaseFact, Tparam{T}()),
    :TRMA57_abs => Combi(hessian_sparse, PDataMA57{T}, solve_modelTRDiagAbs, preprocessMA57, decreaseFact, Tparam{T}()),
    :TRMA57_Sham_vs_Nwt_λ => Combi(hessian_sparse, PDataMA57{T}, (x, y, z) -> solve_modelTRDiag_HO_vs_Nwt_λ(x, y, z; ho_correction = corr_ho, nwt_res_fact = nwt_res_fact, λfact = λfact), preprocessMA57, decreaseFact, Tparam{T}()),
    :TRMA57 => Combi(hessian_sparse, PDataMA57{T}, solve_modelTRDiag, preprocessMA57, decreaseFact, Tparam{T}()),
    :TRMA97_abs => Combi(hessian_dense, PDataMA97{T}, solve_modelTRDiagAbs, preprocessMA97, decreaseFact, Tparam{T}()),
    :TRMA97 => Combi(hessian_sparse, PDataMA97{T}, solve_modelTRDiag, preprocessMA97, decreaseFact, Tparam{T}()),
    :TRSpectral_abs => Combi(hessian_dense, PDataSpectral{T}, solve_modelTRDiagAbs, preprocessSpectral, decreaseFact,Tparam{T}()),
    :TRSpectral => Combi(hessian_dense, PDataSpectral{T}, solve_modelTRDiag, preprocessSpectral, decreaseFact,Tparam{T}()),
)