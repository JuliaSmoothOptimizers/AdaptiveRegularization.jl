shifts = 10.0.^(collect(-15.0:0.50:15.0))

solvers_const = Dict(
    :ARCLDLt_abs => (hessian_dense, PDataLDLt, solve_modelARCDiagAbs, preprocessLDLt, decreaseFact, Tparam()),
    :ARCLDLt_HO_Sham => (hessian_dense, PDataLDLt, (x, y, z) -> solve_modelARCDiag_HO(x, y, z, ho_correction = :Shamanskii, λfact = λfact), preprocessLDLt, decreaseFact, Tparam()),
    :ARCLDLt_HO_vs_Nwt => (hessian_dense, PDataLDLt,  (x, y, z) -> solve_modelARCDiag_HO_vs_Nwt(x, y, z, λfact = λfact, nwt_res_fact = nwt_res_fact), preprocessLDLt, decreaseFact, Tparam()),
    :ARCLDLt => (hessian_dense, PDataLDLt, solve_modelARCDiag, preprocessLDLt, decreaseFact, Tparam()),
    :ARCMA57_abs => (hessian_sparse, PDataMA57, solve_modelARCDiagAbs, preprocessMA57, decreaseFact, Tparam()),
    :ARCMA57_Sham_vs_Nwt_λ => (hessian_sparse, PDataMA57, (x, y, z) -> solve_modelARCDiag_HO_vs_Nwt(x, y, z, λfact = λfact, nwt_res_fact = nwt_res_fact, ho_correction = :Shamanskii_MA57), preprocessMA57, decreaseFact, Tparam()),
    :ARCMA57_Sham_vs_Nwt => (hessian_sparse, PDataMA57, solve_modelARCDiag, preprocessMA57, decreaseFact, Tparam()),
    :ARCMA57_Sham_λ => (hessian_sparse, PDataMA57, (x, y, z) -> solve_modelARCDiag_HO(x, y, z, ho_correction = :Shamanskii_MA57, λfact = λfact), preprocessMA57, decreaseFact, Tparam()),
    :ARCMA57 => (hessian_sparse, PDataMA57, solve_modelARCDiag, preprocessMA57, decreaseFact, Tparam()),
    :ARCMA97_abs => (hessian_dense, PDataMA97, solve_modelARCDiagAbs, preprocessMA97, decreaseFact, Tparam()),
    :ARCMA97 => (hessian_dense, PDataMA97, solve_modelARCDiag, preprocessMA97, decreaseFact, Tparam()),
    :ARCqKdense => (hessian_dense, PDataK, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC(shifts)),
    :ARCqKOp => (hessian_operator, PDataK, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC(shifts)),
    :ARCqKOp1 => (hessian_operator, PDataK, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC(shifts, ζin = ζ, τin = τ)),
    :ARCqKOp2 => (hessian_operator, PDataK, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC(shifts)),
    :ARCqKOp5 => (hessian_operator, PDataK, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC(shifts)),
    :ARCqKsparse => (hessian_sparse, PDataK, solve_modelKARC, preprocessKARC, decreaseKARC, TparamsKARC(shifts)),
    :ARCSpectral_abs => (ARCTR.hessian_dense, ARCTR.PDataSpectral, ARCTR.solve_modelARCDiagAbs, ARCTR.preprocessSpectral, ARCTR.decreaseFact, ARCTR.Tparam()),
    :ARCSpectral => (ARCTR.hessian_dense,ARCTR.PDataSpectral,ARCTR.solve_modelARCDiag,ARCTR.preprocessSpectral,ARCTR.decreaseFact,ARCTR.Tparam()),
    :ST_ARCdense => (hessian_dense, PDataST, solve_modelST_ARC, preprocessST, decreaseGen, TparamsST()),
    :ST_ARCOp => (hessian_operator, PDataST, solve_modelST_ARC, preprocessST, decreaseGen, TparamsST()),
    :ST_ARCsparse => (hessian_sparse, PDataST, solve_modelST_ARC, preprocessST, decreaseGen, TparamsST()),
    :ST_TRdense => (hessian_dense, PDataST, solve_modelST_TR, preprocessST, decreaseGen, TparamsST()),
    :ST_TROp => (hessian_operator, PDataST, solve_modelST_TR, preprocessST, decreaseGen, TparamsST()),
    :ST_TRsparse => (hessian_sparse, PDataST, solve_modelST_TR, preprocessST, decreaseGen, TparamsST()),
    :TRKdense => (hessian_dense, PDataK, solve_modelKTR, preprocessKTR, decreaseKTR, TparamsKTR()),
    :TRKOp => (hessian_operator, PDataK, solve_modelKTR, preprocessKTR, decreaseKTR, TparamsKTR()),
    :TRKsparse => (hessian_sparse, PDataK, solve_modelKTR, preprocessKTR, decreaseKTR, TparamsKTR()),
    :TRLDLt_abs => (hessian_dense, PDataLDLt, solve_modelTRDiagAbs, preprocessLDLt, decreaseFact, Tparam()),
    :TRLDLt_BK => (hessian_dense, PDataLDLt, solve_modelTRDiag, preprocessLDLt2, decreaseFact, Tparam()),
    :TRLDLt_HO_MP => (hessian_dense,PDataLDLt,  (x, y, z) -> solve_modelTRDiag_HO(x, y , z, ho_correction = corr_ho, fact = 2.0), preprocessLDLt, decreaseFact, Tparam()),
    :TRLDLt_HO_vs_Nwt_λ => (hessian_dense, PDataLDLt, (x, y, z) -> solve_modelTRDiag_HO_vs_Nwt_λ(x, y , z; ho_correction = corr_ho, nwt_res_fact = nwt_res_fact, λfact = λfact), preprocessLDLt, decreaseFact, Tparam()),
    :TRLDLt => (hessian_dense, PDataLDLt, solve_modelTRDiag, preprocessLDLt, decreaseFact, Tparam()),
    :TRMA57_abs => (hessian_sparse, PDataMA57, solve_modelTRDiagAbs, preprocessMA57, decreaseFact, Tparam()),
    :TRMA57_Sham_vs_Nwt_λ => (hessian_sparse, PDataMA57, (x, y, z) -> solve_modelTRDiag_HO_vs_Nwt_λ(x, y, z; ho_correction = corr_ho, nwt_res_fact = nwt_res_fact, λfact = λfact), preprocessMA57, decreaseFact, Tparam()),
    :TRMA57 => (hessian_sparse, PDataMA57, solve_modelTRDiag, preprocessMA57, decreaseFact, Tparam()),
    :TRMA97_abs => (hessian_dense, PDataMA97, solve_modelTRDiagAbs, preprocessMA97, decreaseFact, Tparam()),
    :TRMA97 => (hessian_sparse, PDataMA97, solve_modelTRDiag, preprocessMA97, decreaseFact, Tparam()),
    :TRSpectral_abs => (hessian_dense, PDataSpectral, solve_modelTRDiagAbs, preprocessSpectral, decreaseFact,Tparam()),
    :TRSpectral => (hessian_dense, PDataSpectral, solve_modelTRDiag, preprocessSpectral, decreaseFact,Tparam()),
)